#include <iostream>  // Required for input/output operations (e.g., cout)
#include <string>    // Required for string manipulation
#include <algorithm> // Required for std::sort and std::next_permutation

// Using the std namespace to avoid repeatedly typing 'std::'
using namespace std;

int main() {
    // Declare a string variable to store the input
    string inputString;

    // Prompt the user to enter a string
    cout << "Enter a string: ";
    // Read the string from the user
    cin >> inputString;

    // 1. Sort the string initially to get the first lexicographical permutation.
    // This is crucial because std::next_permutation works by finding the
    // next permutation *after* the current one. If the string is not
    // sorted initially, you won't get all permutations in lexicographical order.
    sort(inputString.begin(), inputString.end());

    // 2. Use a while loop with std::next_permutation to generate and print
    // all subsequent permutations in lexicographical order.

    cout << "\nPermutations in lexicographical order:\n";

    // Print the first permutation (the sorted string) before entering the loop.
    // This is necessary because the 'while' loop condition checks for the *next*
    // permutation before the first print inside the loop.
    cout << inputString << "\n";

    // Loop continues as long as std::next_permutation successfully finds
    // and generates a new permutation.
    while (next_permutation(inputString.begin(), inputString.end())) {
        // Print the current permutation generated by next_permutation
        cout << inputString << "\n";
    }

    return 0; // Indicate successful execution
}
